name: Build Release

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build_android:
    name: Build android
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Gradle
      uses: gradle/gradle-build-action@v2

    - name: Retrieve the keystore and decode it to a file
      env:
        ANDROID_RELEASE_KEYSTORE_FILE: ${{ secrets.ANDROID_RELEASE_KEYSTORE_FILE }}
      run: |
        mkdir keys
        echo $ANDROID_RELEASE_KEYSTORE_FILE | base64 --decode > keys/release.keystore
        
    - name: Write local.properties
      env:
        ANDROID_RELEASE_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_RELEASE_KEYSTORE_PASSWORD }}
        ANDROID_RELEASE_KEY_ALIAS: ${{ secrets.ANDROID_RELEASE_KEY_ALIAS }}
        ANDROID_RELEASE_KEY_PASSWORD: ${{ secrets.ANDROID_RELEASE_KEY_PASSWORD }}
      run: |
        echo androidReleaseStoreFile=../../keys/release.keystore >> local.properties
        echo androidReleaseStorePassword=$ANDROID_RELEASE_KEYSTORE_PASSWORD >> local.properties
        echo androidReleaseKeyAlias=$ANDROID_RELEASE_KEY_ALIAS >> local.properties
        echo androidReleaseKeyPassword=$ANDROID_RELEASE_KEY_PASSWORD >> local.properties

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew :composeApp:run

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with: 
        name: android
        path: |
          composeApp/build/outputs/apk/debug/composeApp-debug.apk
          composeApp/build/outputs/apk/release/composeApp-release.apk

  build_desktop:
    strategy:
      matrix:
        config: [
          { target: apple, os: macos-latest, task: packageDmg },
          { target: windows, os: windows-latest, task: packageMsi },
          { target: linux, os: ubuntu-latest, task: packageDeb },
        ]
    runs-on: ${{ matrix.config.os }}
    name: Build ${{ matrix.config.target }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew :composeApp:run:${{ matrix.config.task }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: desktop-${{ matrix.config.target }}
          path: |
            composeApp/src/desktopMain/build/compose/binaries/main/
            
        
  
        
    
